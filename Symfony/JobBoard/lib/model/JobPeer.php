<?php


/**
 * Skeleton subclass for performing query and update operations on the 'jobs' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Tue Feb 22 13:40:48 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class JobPeer extends BaseJobPeer {
  
  public static function getWithToken($token) {
    $c = new Criteria();
    $c->add(JobPeer::TOKEN, $token);
    return JobPeer::doSelectOne($c);
  }
  
  public static function getWithTag($tag) {
    $c = new Criteria();
    $c->add(JobPeer::KEYWORDS, "%%".$tag."%%", Criteria::LIKE);
    return JobPeer::doSelect($c);
  }
  
  public static function getWithCategory($category_id) {
    $c = new Criteria();
    $c->add(JobPeer::CATEGORY_ID, $category_id);
    return JobPeer::doSelect($c);    
  }
  
  public static function addActiveJobsCriteria(Criteria $criteria = null)
  {
    if (is_null($criteria))
    {
      $criteria = new Criteria();
    }

    $criteria->add(self::EXPIRES_AT, time(), Criteria::GREATER_THAN);
    $criteria->addDescendingOrderByColumn(self::CREATED_AT);
    $criteria->add(self::IS_ACTIVATED, true);

    return $criteria;
  }
  
  public static function searchTerms($terms) {
    if($job_indexes = JobIndexPeer::getWithTerm($terms)) {
      $job_ids = array();
      foreach($job_indexes as $job_index) {
        $job_ids[] = $job_index->getJobId();
      }
      $c = self::addActiveJobsCriteria();
      $c->add(self::ID, $job_ids, Criteria::IN);
      return JobPeer::doSelect($c);      
    } else {
      return null;
    }
  }

} // JobPeer
